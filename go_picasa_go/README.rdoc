=Go Picasa go

Go Picasa go is intended as library written in ruby to manipulate 
Picasa[http://picasaweb.google.com/] albums and photos in a easy way. The idea
is to provide behaviors to ordinary objects so they can do basic operations 
(CRUD) in a more object oritented way, lefting behind all the HTTP talk that was 
necessary previouly to interect with this service provided by Google.

This library was implemented based on the 
Protocol Guide[http://code.google.com/intl/pt-BR/apis/picasaweb/docs/2.0/developers_guide_protocol.html] 
version 2.0 of Picasa Web Albums Data API.
 
Go Picasa go is still in development but it will available for use in a short 
period of time.

==Quick Start

In your models:

  class MyUser
    act_as_picasa_user
    has_many_picasa_albums :class_name => "MyAlbum"
    
    # Implement the method that returns the user_id the way you prefer.
    
    def user_id
      'bandmanagertest'
    end
    
    # Implement the method that returns the authentication token for a user.
    #
    #   Ps: In the usage section there's one example of 
    #       how to generate the authentication token.

    def auth_token
      'DQAAAHsAAAASi_ADDIYHfjjeN5S3zxA3CTyrljizPKcig62QAR5FvdZNLY6CgeHPl0...
    end
  end

  class MyAlbum
    act_as_picasa_album
    belongs_to_picasa_user :class_name => "MyUser"
  end

  class MinhaPhoto
    act_as_picasa_photo
    belongs_to_picasa_album :class_name => "MyAlbum"
  end
  
==Usage

Better to show than to talk. Take a look at the examples below<br/>
To generate the authentication token:

  # Instantiate a new user
  
  user = MyUser.new
  user.user_id = 'chucknorris'
  user.password = 'thestrongest'
  
  # Sets the authentication token on the auth_token variable an returns the value
  
  user.authenticate
  => "DQAAAHsAAAASi_ADDIYHfjjeN5S3zxA3CTyrl...
  
  @user.auth_token
  => "DQAAAHsAAAASi_ADDIYHfjjeN5S3zxA3CTyrl...
  
To create an album:

  album = YourAlbum.new
  album.user = user
  album.title = "Title"
  album.summary = "Summary"
  album.location = "Location"
  album.keywords = "Keyword, another keyword"

  album.picasa_save # Returns true or false
  album.picasa_save! # Raise exception in case of not being able to save the album

To update that album:

  album.title = "Updating the title"

  album.picasa_update # Return true or false
  album.picasa_update! # Raise exception in case of not being able to update the album

To destroy an album:

  album.picasa_destroy # Returns true or false
  album.picasa_destroy! # Raise exception in case of not being able to destroy the album

To retrieve an album

  album = YourAlbum.find user_id, album.id, auth_token

